1) Создать двух пользователей (с помощью метода User.objects.create_user('username')).
user1 = User.objects.create_user('Max')
user2 = User.objects.create_user('Ivan')

2)Создать два объекта модели Author, связанные с пользователями.
author1 = Author.objects.create(user_author=user1)
author2 = Author.objects.create(user_author=user2)

3) Добавить 4 категории в модель Category.
theme1 = Category.objects.create(name='Спорт') 
theme2 = Category.objects.create(name='Животные') 
theme3 = Category.objects.create(name='Технологий') 
theme4 = Category.objects.create(name='Космос')

4) Добавить 2 статьи и 1 новость.
post1 = Post.objects.create(author=author1, choice='AT', header='Заголовок1', post_text='Текст 1 статьи')  
post2 = Post.objects.create(author=author2, choice='AT', header='Заголовок2', post_text='Текст 2 статьи') 
post3 = Post.objects.create(author=author1, choice='NW', header='Заголовок3', post_text='Текст новости')

5) Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
post1.category.add(theme1) 
post2.category.add(theme1,theme2) 
post3.category.add(theme4)

6) Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comment1 = Comment.objects.create(post=post1, user=user1, comment_text='Текст комментария1') 
comment2 = Comment.objects.create(post=post1, user=user2, comment_text='Текст комментария2') 
comment3 = Comment.objects.create(post=post2, user=user2, comment_text='Текст комментария3') 
comment4 = Comment.objects.create(post=post3, user=user1, comment_text='Текст комментария4')

7) Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.like(post1) 
Post.like(post2) 
Post.dislike(post3) 
Comment.dislike(comment1) 
Comment.dislike(comment3) 
Comment.like(comment2)  
Comment.like(comment4)
Позже еще добавлял, но команды сюда перенести забыл) 

8) Обновить рейтинги пользователей.
author1.update_rating()
author2.update_rating()

9) Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Author.objects.all().order_by('-user_rating').values('user_author__username', 'user_rating').first()

10) Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Post.objects.order_by('-post_rating').values('data', 'author_id__user_author__username' ).first() 
Post.objects.order_by('-post_rating').first().preview() 

11) Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
post_best=Post.objects.order_by('-post_rating').first()
post_best.comment_set.all().values('data', 'user__username', 'comment_rating', 'comment_text')
